// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © cdu4rte
//@version=5

// @description Herramientas para detectar patrones en velas japonesas.
library (title = "camdPattern")

import cdu4rte/camdLib/37

// Función para verificar el patrón de vela martillo.
// index El índice de la vela.
export isHammerPattern(int index) => 
    camdLib.isBearishTrend() and
     close[index] != open[index] and
     camdLib.getLowerShadow(index) >= 2 * camdLib.getBodySize(index) and
     camdLib.getUpperShadow(index) < 0.25 * camdLib.getBodySize(index)

// Función para verificar el patrón de vela martillo.
export isHammerPattern() =>    
    isHammerPattern(0)

// Martillo invertido o inverted hammer.
export isInvertedHammerPattern() =>
    camdLib.isBearishTrend() and
     close != open and
     camdLib.getUpperShadow() >= camdLib.getBodySize() * 2 and
     camdLib.getLowerShadow() < camdLib.getBodySize() * 0.25

// Ahorcado o Hanging Man.
export isHangingManPattern() =>
 camdLib.isBullishTrend() and
  close != open and
  camdLib.getLowerShadow() >= camdLib.getBodySize() * 2 and
  camdLib.getUpperShadow() < camdLib.getBodySize() * 0.25

// Estrella Fugaz o Shooting Star.
export isShootingStarPattern() =>
    camdLib.isBullishTrend() and
     close != open and
     camdLib.getUpperShadow() >= camdLib.getBodySize() * 2 and
     camdLib.getLowerShadow() < camdLib.getBodySize() * 0.25

// Presa de cinturón alcista o bullish belt-hold line.
export isBullishBeltHoldLinePattern() =>
    camdLib.isBearishTrend() and
     close > open and open == low and
     camdLib.getUpperShadow() < camdLib.getBodySize() * 0.25 and
     camdLib.getBodySize() >= camdLib.getAverageCandleSize(0, 20) * 2

// Presa de cinturón bajista o bearish belt-hold line.
export isBearishBeltHoldLinePattern() =>
    camdLib.isBullishTrend() and
     close < open and open == high and
     camdLib.getLowerShadow() < camdLib.getBodySize() * 0.25 and
     camdLib.getBodySize() >= camdLib.getAverageCandleSize(0, 20) * 2

// Envolvente alcista o bullish engulfing.
export isBullishEngulfingPattern() =>
    camdLib.isBearishTrend() and 
     close > open and close[1] < open[1] and
     close > open[1] and open < close[1]

// Envolvente bajista o Bearish engulfing.
export isBearishEngulfingPattern() =>
    camdLib.isBullishTrend() and
     close < open and close[1] > open[1] and
      close < open[1] and open > close[1]

// Función para verificar el patrón de vela Harami alcista.
export isBullishHaramiPattern() => 
    camdLib.isBearishTrend() and 
     close > open and close[1] < open[1] and
     close < open[1] and open > close[1]

// Función para verificar el patrón de vela Harami bajista.
export isBearishHaramiPattern() => 
    camdLib.isBullishTrend() and
     close < open and close[1] > open[1] and
     close > open[1] and open < close[1]

export isDojiPattern() =>
    // Calcular el tamaño del cuerpo de la vela
    body_size = math.abs(close - open)
    // Calcular la sombra superior e inferior
    upper_shadow = high - math.max(open, close)
    lower_shadow = math.min(open, close) - low
    // Verificar si la vela es un Doji
    //body_size < 0.0025 * close and upper_shadow < 0.05 * close and lower_shadow < 0.05 * close
    body_size < 0.0025 * close

// Paloma mensajera o Homing pigeon
export isHomingPigeonPattern() =>
    camdLib.isBearishTrend() and
     close < open and close[1] < open[1] and
     high < open[1] and low > close[1]

// Línea de contraataque alcista o bullish counterattack line
export isBullishCounterAttackLinePattern() =>
    camdLib.isBearishTrend() and
     camdLib.getBodySize(1) > camdLib.getAverageCandleSize(1) and
     close[1] < open[1] and 
     camdLib.getBodySize() > camdLib.getAverageCandleSize(0) and
     close > open and
     camdLib.calculatePriceDifference(close[1], close) < close * 0.0025

// Línea de contraataque bajista o bearish counterattack line.
export isBearishCounterAttackLinePattern() =>
    camdLib.isBullishTrend() and
     camdLib.getBodySize(1) > camdLib.getAverageCandleSize(1) and
     close[1] > open[1] and 
     camdLib.getBodySize() > camdLib.getAverageCandleSize(0) and
     close < open and
     camdLib.calculatePriceDifference(close[1], close) < close * 0.0025

// Tres soldados blancos o three white soldiers.
export isThreeWhiteSoldiersPattern() =>
    camdLib.isBearishTrend() and
     close[2] > open[2] and close[1] > open[1] and close > open and    
     camdLib.getUpperShadow(2) <= camdLib.getBodySize(2) * 0.25 and camdLib.getUpperShadow(1) <= camdLib.getBodySize(1) * 0.25 and camdLib.getUpperShadow() <= camdLib.getBodySize() * 0.25 and
     close[2] < close[1] and close[1] < close and
     open[1] > open[2] and open[1] < close[2] and
     open > open[1] and open < close[1]

// Tres cuervos negros o three black crows.
export isThreeBlackCrowsPattern() =>
    camdLib.isBullishTrend() and
     close[2] < open[2] and close[1] < open[1] and close < open and    
     camdLib.getLowerShadow(2) <= camdLib.getBodySize(2) * 0.25 and camdLib.getLowerShadow(1) <= camdLib.getBodySize(1) * 0.25 and camdLib.getLowerShadow() <= camdLib.getBodySize() * 0.25 and
     close[2] > close[1] and close[1] > close and
     open[1] < open[2] and open[1] > close[2] and
     open < open[1] and open > close[1]

// Tres cuervos negros idénticos o three identical black crows.
export isThreeIdenticalBlackCrowsPattern()  =>
    camdLib.isBullishTrend() and
     close[2] < open[2] and close[1] < open[1] and close < open and
     camdLib.getLowerShadow(2) <= camdLib.getBodySize(2) * 0.25 and camdLib.getLowerShadow(1) <= camdLib.getBodySize(1) * 0.25 and camdLib.getLowerShadow() <= camdLib.getBodySize() * 0.25 and
     close[1] < close[2] and close < close[1] and
     camdLib.calculatePriceDifference(close[2], open[1]) < open[1] * 0.0025 and
     camdLib.calculatePriceDifference(close[1], open) < open * 0.0025

//Parada previa o advance block.
export isAdvanceBlockPattern() =>
    camdLib.isBullishTrend() and
     camdLib.isWhite(close[2], open[2]) and camdLib.isWhite(close[1], open[1]) and camdLib.isWhite(close, open) and
     camdLib.isHigherClose(close[1], close[2]) and  camdLib.isHigherClose(close, close[1]) and
     camdLib.isOpenInsidePrevBody(1) and camdLib.isOpenInsidePrevBody(0) and
     camdLib.isExhaustionPattern(close[2], open[2], close[1], open[1], close, open)

// Reflexión o deliberation pattern.
export isDeliberationPattern() =>
    camdLib.isBullishTrend() and
     camdLib.isWhite(close[2], open[2]) and camdLib.isWhite(close[1], open[2]) and camdLib.isWhite(close, open) and
     camdLib.isHigherClose(close[1], close[2]) and
     camdLib.isOpenInsidePrevBody(1) and
     camdLib.isExhaustionPattern(close[1], open[1], close, open, high) and
     (not camdLib.isHigherClose(close, close[1]) or camdLib.isBullishGap() or isDojiPattern())

// Suelo de tres ríos o Unique three rivers bottom.
export isUniqueThreeRiversBottomPattern() =>
    camdLib.isBearishTrend() and
     camdLib.isBlack(close[2], open[2]) and camdLib.isBigBody(2, 5) and
     isHammerPattern(1) and camdLib.isBlack(close[1], open[1]) and camdLib.isBodyInsidePrevBody(1) and
     camdLib.isBodyInTheUpperMiddleZone(1) and camdLib.isLowerLow(1) and
     camdLib.isWhite(close, open) and camdLib.isBodyInsidePrevBody(0, 2) and camdLib.isBodyBelowPrevBody(0, 1)

// Tres estrellas al sur o Three stars in the south.
export isThreeStarsInTheSouthPattern() =>
    candle1 = 2, candle2 = 1, candle3 = 0
    camdLib.isBearishTrend() and
     camdLib.isBlack(close[candle1], open[candle1]) and camdLib.isLongShadow(candle1) and
     camdLib.isBlack(close[candle2], open[candle2]) and camdLib.getBodySize(candle2) < camdLib.getBodySize(candle1) and  not camdLib.isLowerLow(candle2) and
     camdLib.isBlack(close[candle3], open[candle3]) and not camdLib.hasShadows(candle3) and camdLib.isInsidePrevRange(candle3, candle2)

// Escape alcista o Bullish Breakaway.
export isBullishBreakawayPattern() =>
    candle1 = 4, candle2 = 3, candle3 = 2, candle4 = 1, candle5 = 0
    camdLib.isBearishTrend() and
     camdLib.isBlack(close[candle1], open[candle1]) and camdLib.isBigBody(candle1, 5) and
     camdLib.isBlack(close[candle2], open[candle2]) and camdLib.isSmallBody(candle2, 5) and camdLib.isBearishGapRelativeToShadows(candle2, candle1) and
     open[candle3] < low[candle2] and open[candle4] < low[candle2]and 
     not camdLib.isHigherClose(close[candle3], close[candle2]) and not camdLib.isHigherClose(close[candle4], close[candle4]) and
     camdLib.isBlack(close[candle3], open[candle3]) and camdLib.isBlack(close[candle4], open[candle4]) and
     camdLib.isWhite(close[candle5], open[candle5]) and close[candle5] < low[candle1] and close[candle5] > high[candle2] and
     camdLib.isSmallBody(candle3, 5) and camdLib.isSmallBody(candle4, 5)

// Escape bajista o Bearish Breakaway.
export isBearishBreakawayPattern() =>
    candle1 = 4, candle2 = 3, candle3 = 2, candle4 = 1, candle5 = 0
    camdLib.isBullishTrend() and
     camdLib.isWhite(close[candle1], open[candle1]) and camdLib.isBigBody(candle1, camdLib.getSessionsLength()) and
     camdLib.isWhite(close[candle2], open[candle2]) and camdLib.isSmallBody(candle2, camdLib.getSessionsLength()) and camdLib.isBullishGapRelativeToShadows(candle2, candle1) and
     open[candle3] > low[candle2] and open[candle4] > low[candle2] and
     camdLib.isHigherClose(close[candle3], close[candle2]) and camdLib.isHigherClose(close[candle4], close[candle3]) and
     camdLib.isWhite(close[candle3], open[candle3]) and camdLib.isWhite(close[candle4], open[candle4]) and
     camdLib.isBlack(close[candle5], open[candle5]) and
     close[candle5] > high[candle1] and close[candle5] < low[candle2]

// Patrón de bebé oculto o Concealing baby swallow.
export isConcealingBabySwallowPattern() =>
    candle1 = 4, candle2 = 3, candle3 = 2, candle4 = 1, candle5 = 0
    camdLib.isBearishTrend() and 
     camdLib.isBlack(close[candle2], open[candle2]) and camdLib.isBlack(close[candle3], open[candle3]) and
     not camdLib.hasShadows(candle2) and not camdLib.hasShadows(candle3) and
     camdLib.isLowerClose(close[candle2], close[candle1]) and
     camdLib.isLowerClose(close[candle3], close[candle2]) and
     camdLib.isBlack(close[candle4], open[candle4]) and
     camdLib.isBearishGapRelativeToBodies(candle4) and
     high[candle4] > close[candle2] and
     camdLib.isBlack(close[candle5], open[candle5]) and
     camdLib.isBullishGapRelativeToBodies(candle5) and
     camdLib.isEngulfingBar(candle5) and  not camdLib.hasShadows(candle5)

//@function Determina si existe la formación del patrón Stick Sandwich.
//@returns true si existe la formación del patrón.
export isStickSandwichPattern() =>
    candle1 = 2, candle2 = 1, candle3 = 0
    camdLib.isBearishTrend() and
     camdLib.isBlack(close[candle1], open[candle1]) and camdLib.isBigBody(candle1, camdLib.getSessionsLength()) and
     camdLib.isWhite(close[candle2], open[candle2]) and
     low[candle2] > close[candle1] and
     camdLib.isBlack(close[candle3], open[candle3]) and camdLib.isEngulfingBar(candle3) and camdLib.isCloseNearToPrevClose(candle3, candle1)

//@function Determina si existe la formación del patrón Mínimos comunes o Matching low.
//@returns true si existe la formación del patrón.
export isMatchingLowPattern() =>
    candle1 = 1, candle2 = 0
    camdLib.isBearishTrend() and
     camdLib.isBlack(close[candle1], open[candle1]) and camdLib.isBigBody(candle1, camdLib.getSessionsLength()) and camdLib.isCloseNearToLow(candle1) and
     camdLib.isOpenInsidePrevBody(candle2) and camdLib.isCloseNearToPrevClose(candle2, candle1) and camdLib.isBlack(close[candle2], open[candle2])

//@function Determina si existe la formación del patrón Suelo escalonado o Ladder bottom.
//@returns true si existe la formación del patrón.
export isLadderBottomPattern() =>
    candle1 = 4, candle2 = 3, candle3 = 2, candle4 = 1, candle5 = 0
    camdLib.isBearishTrend() and
     camdLib.isBlack(candle1) and camdLib.isBlack(candle2) and camdLib.isBlack(candle3) and
     camdLib.hasShortLowerShadow(candle1) and camdLib.hasShortLowerShadow(candle2) and camdLib.hasShortLowerShadow(candle3) and
     camdLib.isLowerClose(candle2, candle1) and camdLib.isLowerClose(candle3, candle2) and
     camdLib.isOpenInsidePrevBody(candle2) and camdLib.isOpenInsidePrevBody(candle3) and
     camdLib.isBlack(candle4) and camdLib.hasUpperShadow(candle4) and camdLib.isCloseBelowPrevLow(candle4, candle3) and camdLib.hasShortLowerShadow(candle4) and
     camdLib.isWhite(candle5) and camdLib.isCloseAbovePrevHigh(candle5, candle4)

//@function Determina si existe la formación del patrón Línea de avance o thrusting line.
//@returns true si existe la formación del patrón.
export isThrustingLinePattern() =>
    candle1 = 1, candle2 = 0
    camdLib.isBearishTrend() and
     camdLib.isBigBody(candle1, camdLib.getSessionsLength()) and camdLib.isBlack(candle1) and
     camdLib.isWhite(candle2) and camdLib.isOpenBelowPrevLow(candle2, candle1) and camdLib.isCloseInsidePrevLowMiddlePart(candle2, candle1)

//@function Determina si existe la formación del patrón Avance in-neck o in-neck pattern.
//@returns true si existe la formación del patrón.
export isInNeckPatter() =>
    candle1 = 1, candle2 = 0
    camdLib.isBearishTrend() and
     camdLib.isBigBody(candle1, camdLib.getSessionsLength()) and camdLib.isBlack(candle1) and
     camdLib.isWhite(candle2) and camdLib.isOpenBelowPrevLow(candle2, candle1) and camdLib.isCloseNearToLowerBodyPart(candle2, candle1)

//@function Determina si existe la formación del patrón Avance on-neck o on-neck pattern.
//@returns true si existe la formación del patrón.
export isOnNeckPatter() =>
    candle1 = 1, candle2 = 0
    camdLib.isBearishTrend() and
     camdLib.isBigBody(candle1, camdLib.getSessionsLength()) and camdLib.isBlack(candle1) and
     camdLib.isWhite(candle2) and camdLib.isOpenBelowPrevLow(candle2, candle1) and camdLib.isCloseNearToPrevLow(candle2, candle1)

//@function Determina si existe la formación del patrón Líneas de separación alcistas o bullish separating lines.
//@returns true si existe la formación del patrón.
export isBullishSeparatingLinesPattern() =>
    candle1 = 1, candle2 = 0
    camdLib.isBullishTrend() and
     camdLib.isBlack(candle1) and camdLib.isBigBody(candle1, camdLib.getSessionsLength()) and
     camdLib.isWhite(candle2) and camdLib.isBigBody(candle2, camdLib.getSessionsLength()) and
     camdLib.isOpeningCloseToPrevOpening(candle2, candle1)

//@function Determina si existe la formación del patrón Líneas de separación bajistas o bearish separating lines.
//@returns true si existe la formación del patrón.
export isBearishSeparatingLinesPattern() =>
    candle1 = 1, candle2 = 0
    camdLib.isBearishTrend() and
     camdLib.isWhite(candle1) and camdLib.isBigBody(candle1, camdLib.getSessionsLength()) and
     camdLib.isBlack(candle2) and camdLib.isBigBody(candle2, camdLib.getSessionsLength()) and
     camdLib.isOpeningCloseToPrevOpening(candle2, candle1)

//@function Determina si existe la formación del patrón Método de tres al alza o rising three methods.
//@returns true si existe la formación del patrón.
export isRisingThreeMethodsPattern() =>
    candle1 = 4, candle2 = 3, candle3 = 2, candle4 = 1, candle5 = 0
    camdLib.isBullishTrend() and 
     camdLib.isWhite(candle1) and camdLib.isBigBody(candle1, camdLib.getSessionsLength()) and
     camdLib.isBlack(candle2) and camdLib.isBlack(candle3) and camdLib.isBlack(candle4) and
     camdLib.isSmallBody(candle2, camdLib.getSessionsLength()) and camdLib.isSmallBody(candle3, camdLib.getSessionsLength()) and camdLib.isSmallBody(candle4, camdLib.getSessionsLength()) and
     camdLib.isLowerLow(candle3) and camdLib.isLowerLow(candle4) and
     camdLib.isLowerClose(candle3, candle2) and camdLib.isLowerClose(candle4, candle3) and
     camdLib.isBodyInsidePrevBody(candle2, candle1) and camdLib.isBodyInsidePrevBody(candle3, candle1) and camdLib.isBodyInsidePrevBody(candle4, candle1) and
     camdLib.isWhite(candle5) and camdLib.isBigBody(candle5, camdLib.getSessionsLength()) and camdLib.isHigherClose(candle5, candle1)

//@function Determina si existe la formación del patrón Método de tres a la baja o falling three methods.
//@returns true si existe la formación del patrón.
export isFallingThreeMethodsPattern() =>
    candle1 = 4, candle2 = 3, candle3 = 2, candle4 = 1, candle5 = 0
    camdLib.isBearishTrend() and 
     camdLib.isBlack(candle1) and camdLib.isBigBody(candle1, camdLib.getSessionsLength()) and
     camdLib.isWhite(candle2) and camdLib.isWhite(candle3) and camdLib.isWhite(candle4) and
     camdLib.isSmallBody(candle2, camdLib.getSessionsLength()) and camdLib.isSmallBody(candle3, camdLib.getSessionsLength()) and camdLib.isSmallBody(candle4, camdLib.getSessionsLength()) and
     camdLib.isHigherHigh(candle3, candle2) and camdLib.isHigherHigh(candle4, candle3) and
     camdLib.isHigherClose(candle3, candle2) and camdLib.isHigherClose(candle4, candle3) and
     camdLib.isBodyInsidePrevBody(candle2, candle1) and camdLib.isBodyInsidePrevBody(candle3, candle1) and camdLib.isBodyInsidePrevBody(candle4, candle1) and
     camdLib.isBlack(candle5) and camdLib.isBigBody(candle5, camdLib.getSessionsLength()) and camdLib.isLowerClose(candle5, candle1)

//@function Determina si existe la formación del patrón Presa de suelo alcista o Mat-hold bullish.
//@returns true si existe la formación del patrón.
export isMatHoldBullishPattern() =>
    candle1 = 4, candle2 = 3, candle3 = 2, candle4 = 1, candle5 = 0
    camdLib.isBullishTrend() and 
     camdLib.isWhite(candle1) and camdLib.isBigBody(candle1, camdLib.getSessionsLength()) and
     camdLib.isBlack(candle2) and camdLib.isBlack(candle3) and camdLib.isBlack(candle4) and
     camdLib.isSmallBody(candle2, camdLib.getSessionsLength()) and camdLib.isSmallBody(candle3, camdLib.getSessionsLength()) and camdLib.isSmallBody(candle4, camdLib.getSessionsLength()) and
     camdLib.isLowerLow(candle3) and camdLib.isLowerLow(candle4) and
     camdLib.isLowerClose(candle3, candle2) and camdLib.isLowerClose(candle4, candle3) and
     camdLib.isBullishGapRelativeToBodies(candle2) and
     camdLib.isBodyInsidePrevBody(candle2, candle1) and camdLib.isBodyInsidePrevBody(candle3, candle1) and camdLib.isBodyInsidePrevBody(candle4, candle1) and
     camdLib.isWhite(candle5) and camdLib.isBigBody(candle5, camdLib.getSessionsLength()) and camdLib.isCloseHigherPrevOpen(candle5, candle2)

//@function Determina si existe la formación del patrón Triple strike alcista o bullish three line strike.
//@returns true si existe la formación del patrón.
export isBullishThreeLineStrikePattern() =>
    candle1 = 3, candle2 = 2, candle3 = 1, candle4 = 0
    camdLib.isBullishTrend() and
     camdLib.isWhite(candle1) and camdLib.isWhite(candle2) and camdLib.isWhite(candle3) and
     camdLib.isHigherClose(candle2, candle1) and camdLib.isHigherClose(candle3, candle2) and
     camdLib.isOpenInsidePrevBody(candle2) and camdLib.isOpenInsidePrevBody(candle3) and
     camdLib.isBlack(candle4) and camdLib.isOpenHigherPrevClose(candle4, candle3) and camdLib.isCloseBelowPrevOpen(candle4, candle1)

//@function Determina si existe la formación del patrón Triple strike bajista o bearish three line strike.
//@returns true si existe la formación del patrón.
export isBearishThreeLineStrikePattern() =>
    candle1 = 3, candle2 = 2, candle3 = 1, candle4 = 0
    camdLib.isBearishTrend() and
     camdLib.isBlack(candle1) and camdLib.isBlack(candle2) and camdLib.isBlack(candle3) and
     camdLib.isLowerClose(candle2, candle1) and camdLib.isLowerClose(candle3, candle2) and
     camdLib.isOpenInsidePrevBody(candle2) and camdLib.isOpenInsidePrevBody(candle3) and
     camdLib.isWhite(candle4) and camdLib.isCloseHigherPrevOpen(candle4, candle1) and camdLib.isOpenBelowPrevClose(candle4, candle3)

//@function Determina si existe la formación del patrón Estrella Doji o Doji star.
//@returns true si existe la formación del patrón.
isDojiStarPattern(int index) =>
    //threshold_percent = input.float(0.1, title="Umbral de porcentaje (%)")
    threshold_percent = 0.1    
    camdLib.getBodySize(index) < camdLib.getRange(index) * threshold_percent / 100 and
     camdLib.getUpperShadow(index) > camdLib.getRange(index) * threshold_percent / 100 and
     camdLib.getLowerShadow(index) > camdLib.getRange(index) * threshold_percent / 100

//@function Determina si existe la formación del patrón Estrella Doji alcista o bullish Doji star.
//@returns true si existe la formación del patrón.
export isBullishDojiStarPattern() =>
    candle1 = 1, candle2 = 0
    camdLib.isBearishTrend() and
     camdLib.isBlack(candle1) and camdLib.isBigBody(candle1, camdLib.getSessionsLength()) and
     isDojiStarPattern(candle2) and camdLib.isBearishGapRelativeToBodies(candle2)

//@function Determina si existe la formación del patrón Estrella Doji bajista o bearish Doji star.
//@returns true si existe la formación del patrón.
export isBearishDojiStarPattern() =>
    candle1 = 1, candle2 = 0
    camdLib.isBullishTrend() and
     camdLib.isWhite(candle1) and camdLib.isBigBody(candle1, camdLib.getSessionsLength()) and
     isDojiStarPattern(candle2) and camdLib.isBullishGapRelativeToBodies(candle2)

//@function Determina si existe la formación del patrón Estrella del amanecer o morning star.
//@returns true si existe la formación del patrón.
export isMorningStarPattern() =>
    candle1 = 2, candle2 = 1, candle3 = 0
    camdLib.isBearishTrend() and
     camdLib.isBlack(candle1) and camdLib.isBigBody(candle1, camdLib.getSessionsLength()) and
     camdLib.isSmallBody(candle2, camdLib.getSessionsLength()) and camdLib.isBearishGapRelativeToBodies(candle2, candle1) and
     camdLib.isCloseAboveMidpointPrevBody(candle3, candle1)

//@function Determina si existe la formación del patrón Estrella del atardecer o evening star.
//@returns true si existe la formación del patrón.
export isEveningStarPattern() =>
    candle1 = 2, candle2 = 1, candle3 = 0
    camdLib.isBullishTrend() and
     camdLib.isWhite(candle1) and camdLib.isBigBody(candle1, camdLib.getSessionsLength()) and
     camdLib.isSmallBody(candle2, camdLib.getSessionsLength()) and camdLib.isBullishGapRelativeToBodies(candle2, candle1) and
     camdLib.isCloseBelowMidpointPrevBody(candle3, candle1)

//@function Determina si existe la formación del patrón Estrella Doji del amanecer o morning Doji star.
//@returns true si existe la formación del patrón.
export isMorningDojiStarPattern() =>
    candle1 = 2, candle2 = 1, candle3 = 0
    camdLib.isBearishTrend() and
     camdLib.isBlack(candle1) and camdLib.isBigBody(candle1, camdLib.getSessionsLength()) and
     isDojiStarPattern(candle2) and camdLib.isBearishGapRelativeToBodies(candle2, candle1) and
     camdLib.isCloseAboveMidpointPrevBody(candle3, candle1)

//@function Determina si existe la formación del patrón Estrella Doji del atardecer o evening Doji star.
//@returns true si existe la formación del patrón.
export isEveningDojiStarPattern() =>
    candle1 = 2, candle2 = 1, candle3 = 0
    camdLib.isBullishTrend() and
     camdLib.isWhite(candle1) and camdLib.isBigBody(candle1, camdLib.getSessionsLength()) and
     isDojiStarPattern(candle2) and camdLib.isBullishGapRelativeToBodies(candle2, candle1) and
     camdLib.isCloseBelowMidpointPrevBody(candle3, candle1)

//@function Determina si existe la formación del patrón Bebé abandonado alcista o bullish abandoned baby.
//@returns true si existe la formación del patrón.
export isBullishAbandonedBabyPattern() =>
    candle1 = 2, candle2 = 1, candle3 = 0
    camdLib.isBearishTrend() and
     camdLib.isBlack(candle1) and camdLib.isBigBody(candle1, camdLib.getSessionsLength()) and
     isDojiStarPattern(candle2) and camdLib.isBearishGapRelativeToShadows(candle2, candle1) and
     camdLib.isCloseAboveMidpointPrevBody(candle3, candle1)

//@function Determina si existe la formación del patrón Bebé abandonado bajista o bearish abandoned baby.
//@returns true si existe la formación del patrón.
export isBearishAbandonedBabyPattern() =>
    candle1 = 2, candle2 = 1, candle3 = 0
    camdLib.isBullishTrend() and
     camdLib.isWhite(candle1) and camdLib.isBigBody(candle1, camdLib.getSessionsLength()) and
     isDojiStarPattern(candle2) and camdLib.isBullishGapRelativeToShadows(candle2, candle1) and
     camdLib.isCloseBelowMidpointPrevBody(candle3, candle1)

//@function Determina si existe la formación del patrón Triple estrella alcista o bullish tri-star.
//@returns true si existe la formación del patrón.
export isBullishTriStarPattern() =>
    candle1 = 3, candle2 = 2, candle3 = 1, candle4 = 0
    camdLib.isBearishTrend() and
     camdLib.isBlack(candle1) and isDojiStarPattern(candle2) and isDojiStarPattern(candle3) and isDojiStarPattern(candle4) and
     camdLib.isLowerClose(candle2, candle1) and camdLib.isLowerClose(candle3, candle2) and camdLib.isHigherClose(candle4, candle3)

//@function Determina si existe la formación del patrón Triple estrella bajista o bearish tri-star.
//@returns true si existe la formación del patrón.
export isBearishTriStarPattern() =>
    candle1 = 3, candle2 = 2, candle3 = 1, candle4 = 0
    camdLib.isBearishTrend() and
     camdLib.isWhite(candle1) and isDojiStarPattern(candle2) and isDojiStarPattern(candle3) and isDojiStarPattern(candle4) and
     camdLib.isHigherClose(candle2, candle1) and camdLib.isHigherClose(candle3, candle2) and camdLib.isLowerClose(candle4, candle3)
     
//@function Determina si existe la formación del patrón Dos cuervos en hueco alcista o upside-gap two crows.
//@returns true si existe la formación del patrón.
export isUpsideGapTwoCrowsPattern() =>
    candle1 = 2, candle2 = 1, candle3 = 0
    camdLib.isBullishTrend() and
     camdLib.isWhite(candle1) and
     camdLib.isBlack(candle2) and not camdLib.isBiggerRange(candle2, candle1) and camdLib.isBullishGapRelativeToBodies(candle2, candle1) and
     camdLib.isBlack(candle3) and camdLib.isEngulfingBar(candle3) and camdLib.isBullishGapRelativeToBodies(candle3, candle1)

//@function Determina si existe la formación del patrón Dos cuervos o two crows.
//@returns true si existe la formación del patrón.
export isTwoCrowsPattern() =>
    candle1 = 2, candle2 = 1, candle3 = 0
    camdLib.isBullishTrend() and
     camdLib.isWhite(candle1) and
     camdLib.isBlack(candle2) and not camdLib.isBiggerRange(candle2, candle1) and camdLib.isBullishGapRelativeToBodies(candle2, candle1) and
     camdLib.isBlack(candle3) and camdLib.isOpenInsidePrevBody(candle3) and camdLib.isCloseInsidePrevBody(candle3, candle1)

//@function Determina si existe la formación del patrón Hueco alcista Tasuki o upside Tasuki gap.
//@returns true si existe la formación del patrón.
export isUpsideTasukiGapPattern() =>
    candle1 = 2, candle2 = 1, candle3 = 0
    camdLib.isBullishTrend() and
     camdLib.isWhite(candle1) and 
     camdLib.isWhite(candle2) and camdLib.isSmallerRange(candle2, candle1) and camdLib.isBullishGapRelativeToShadows(candle2, candle1) and
     camdLib.isBlack(candle3) and camdLib.isOpenInsidePrevBody(candle3, candle2) and camdLib.isCloseBelowPrevOpen(candle3, candle2) and
     camdLib.isLowerShadowAbovePrevUpperShadow(candle3, candle1)

//@function Determina si existe la formación del patrón Hueco bajista Tasuki o downside Tasuki gap.
//@returns true si existe la formación del patrón.
export isDownsideTasukiGapPattern() =>
    candle1 = 2, candle2 = 1, candle3 = 0
    camdLib.isBearishTrend() and
     camdLib.isBlack(candle1) and 
     camdLib.isBlack(candle2) and camdLib.isSmallerRange(candle2, candle1) and camdLib.isBearishGapRelativeToShadows(candle2, candle1) and
     camdLib.isWhite(candle3) and camdLib.isOpenInsidePrevBody(candle3, candle2) and camdLib.isCloseAbovePrevOpen(candle3, candle2) and
     camdLib.isUpperShadowBelowPrevLowerShadow(candle3, candle1)

//@function Determina si existe la formación del patrón Hueco alcista en método de tres o upside gap three methods.
//@returns true si existe la formación del patrón.
export isUpsideGapThreeMethodsPattern() =>
    candle1 = 2, candle2 = 1, candle3 = 0
    camdLib.isBullishTrend() and
     camdLib.isWhite(candle1) and camdLib.isWhite(candle2) and camdLib.isSmallerRange(candle2, candle1) and
     camdLib.isBullishGapRelativeToShadows(candle2, candle1) and
     camdLib.isBlack(candle3) and camdLib.isOpenInsidePrevBody(candle3, candle2) and camdLib.isCloseInsidePrevBody(candle3, candle1)

//@function Determina si existe la formación del patrón Hueco bajista en método de tres o downside gap three methods.
//@returns true si existe la formación del patrón.
export isDownsideGapThreeMethodsPattern() =>
    candle1 = 2, candle2 = 1, candle3 = 0
    camdLib.isBearishTrend() and
     camdLib.isBlack(candle1) and
     camdLib.isBlack(candle2) and camdLib.isSmallerRange(candle2, candle1) and camdLib.isBearishGapRelativeToShadows(candle2, candle1) and
     camdLib.isWhite(candle3) and camdLib.isOpenInsidePrevBody(candle3, candle2) and camdLib.isCloseInsidePrevBody(candle3, candle1)

//@function Determina si existe la formación del patrón Hueco alcista con velas blancas alineadas o upside gapping side by side white lines.
//@returns true si existe la formación del patrón.
export isUpsideGappingSideBySideWhiteLinesPattern() =>
    candle1 = 2, candle2 = 1, candle3 = 0
    camdLib.isBullishTrend() and
     camdLib.isWhite(candle1) and camdLib.isWhite(candle2) and camdLib.isWhite(candle3) and
     camdLib.isSmallerRange(candle2, candle1) and camdLib.isSmallerRange(candle3, candle1) and
     camdLib.isBullishGapRelativeToShadows(candle2, candle1) and camdLib.isBullishGapRelativeToShadows(candle3, candle1) and
     camdLib.isOpenNearToPrevOpen(candle3, candle2) and camdLib.isCloseNearToPrevClose(candle3, candle2)

//@function Determina si existe la formación del patrón Hueco bajista con velas blancas alineadas o downside gapping side by side white lines.
//@returns true si existe la formación del patrón.
export isDownsideGappingSideBySideWhiteLinesPattern() =>
    candle1 = 2, candle2 = 1, candle3 = 0
    camdLib.isBearishTrend() and
     camdLib.isBlack(candle1) and camdLib.isWhite(candle2) and camdLib.isWhite(candle3) and
     camdLib.isSmallerRange(candle2, candle1) and camdLib.isSmallerRange(candle3, candle1) and
     camdLib.isBearishGapRelativeToShadows(candle2, candle1) and camdLib.isBearishGapRelativeToShadows(candle3, candle1) and
     camdLib.isOpenNearToPrevOpen(candle3, candle2) and camdLib.isCloseNearToPrevClose(candle3, candle2)

//@function Determina si existe la formación del patrón Golpe alcista o bullish kicking.
//@returns true si existe la formación del patrón.
export isBullishKickingPattern() =>
    candle1 = 1, candle2 = 0
    (camdLib.isBullishTrend() or camdLib.isBearishTrend()) and
     camdLib.isBlack(candle1) and camdLib.isBigBody(candle1, camdLib.getSessionsLength()) and
     camdLib.isWhite(candle2) and camdLib.isBigBody(candle2, camdLib.getSessionsLength()) and
     camdLib.isBullishGapRelativeToShadows(candle2, candle1)
     
//@function Determina si existe la formación del patrón Golpe bajista o bearish kicking.
//@returns true si existe la formación del patrón.
export isBearishKickingPattern() =>
    candle1 = 1, candle2 = 0
    (camdLib.isBullishTrend() or camdLib.isBearishTrend()) and
     camdLib.isWhite(candle1) and camdLib.isBigBody(candle1, camdLib.getSessionsLength()) and
     camdLib.isBlack(candle2) and camdLib.isBigBody(candle2, camdLib.getSessionsLength()) and
     camdLib.isBearishGapRelativeToShadows(candle2, candle1)

