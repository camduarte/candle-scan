// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © cdu4rte

//@version=5
indicator(title = "Patrones", overlay = true)

import cdu4rte/camdPattern/10

// Contadores
var int bullishBeltHoldLineCounter = 0
var int bearishBeltHoldLineCounter = 0
var int homingPigeonCounter = 0
var int advanceBlockCounter = 0
var int deliberationCounter = 0
var int uniqueThreeRiversBottomCounter = 0
var int threeStarsInTheSouthCounter = 0
var int bullishBreakawayCounter = 0
var int bearishBreakawayCounter = 0
var int concealingBabySwallowCounter = 0
var int stickSandwichCounter = 0
var int matchingLowCounter = 0
var int ladderBottomCounter = 0
var int thrustingLineCounter = 0
var int inNeckCounter = 0
var int onNeckCounter = 0
var int bullishSeparatingLinesCounter = 0
var int bearishSeparatingLinesCounter = 0

// Llamada a los patrones.
isThreeIdenticalBlackCrows = camdPattern.isThreeIdenticalBlackCrowsPattern()
isAdvanceBlock = camdPattern.isAdvanceBlockPattern()
isDeliberation = camdPattern.isDeliberationPattern()
isUniqueThreeRiversBottom = camdPattern.isUniqueThreeRiversBottomPattern()
isThreeStarsInTheSouth = camdPattern.isThreeStarsInTheSouthPattern()
isBullishBreakaway = camdPattern.isBullishBreakawayPattern()
isBearishBreakaway = camdPattern.isBearishBreakawayPattern()
isConcealingBabySwallow =  camdPattern.isConcealingBabySwallowPattern()
isStickSandwich = camdPattern.isStickSandwichPattern()
isMatchingLow = camdPattern.isMatchingLowPattern()
isLadderBottom = camdPattern.isLadderBottomPattern()
isThrustingLine = camdPattern.isThrustingLinePattern()
isInNeck = camdPattern.isInNeckPatter()
isOnNeck = camdPattern.isOnNeckPatter()
isBullishSeparatingLines = camdPattern.isBullishSeparatingLinesPattern()
isBearishSeparatingLines = camdPattern.isBearishSeparatingLinesPattern()

// Agrego etiqueta del patrón a las velas.
if camdPattern.isHammerPattern()
    label.new(x = bar_index, y = low, text = "Martillo", style=label.style_label_down, color=color.rgb(189, 236, 182), size=size.small, yloc=yloc.belowbar)
else if camdPattern.isInvertedHammerPattern()
    label.new(x = bar_index, y = low, text = "Martillo invertido", style=label.style_label_down, color=color.rgb(189, 236, 182), size=size.small, yloc=yloc.belowbar)
else if camdPattern.isHangingManPattern()
    label.new(x = bar_index, y = low, text = "Ahorcado", style=label.style_label_down, color=color.rgb(242,186,201,0), size=size.small, yloc=yloc.belowbar)
else if camdPattern.isShootingStarPattern()
    label.new(x = bar_index, y = low, text = "Estrella Fugaz", style=label.style_label_down, color=color.rgb(242,186,201,0), size=size.small, yloc=yloc.belowbar)
else if camdPattern.isBullishBeltHoldLinePattern()
    label.new(x = bar_index, y = low, text = "Presa de cinturón alcista", style=label.style_label_down, color=color.rgb(189, 236, 182), size=size.small, yloc=yloc.belowbar)
    bullishBeltHoldLineCounter := bullishBeltHoldLineCounter + 1
else if camdPattern.isBearishBelthHoldLinePattern()
    label.new(x = bar_index, y = low, text = "Presa de cinturón bajista", style=label.style_label_down, color=color.rgb(242,186,201,0), size=size.small, yloc=yloc.belowbar)
    bearishBeltHoldLineCounter := bearishBeltHoldLineCounter + 1
else if camdPattern.isBullishEngulfingPattern()
    label.new(x = bar_index, y = low, text = "Envolvente alcista", style=label.style_label_down, color=color.rgb(189, 236, 182), size=size.small, yloc=yloc.belowbar)
else if camdPattern.isBearishEngulfingPattern()
    label.new(x = bar_index, y = low, text = "Envolvente bajista", style=label.style_label_down, color=color.rgb(242,186,201,0), size=size.small, yloc=yloc.belowbar)
else if camdPattern.isBullishHaramiPattern()
    label.new(x = bar_index, y = low, text = "Harami alcista", style=label.style_label_down, color=color.rgb(189, 236, 182), size=size.small, yloc=yloc.belowbar)
else if camdPattern.isBearishHaramiPattern()
    label.new(x = bar_index, y = low, text = "Harami bajista", style=label.style_label_down, color=color.rgb(242,186,201,0), size=size.small, yloc=yloc.belowbar)
//else if camdPattern.isDojiPattern()
//    label.new(x = bar_index, y = low, text = "Doji", style=label.style_label_down, color=color.yellow, size=size.small, yloc=yloc.belowbar)
else if camdPattern.isHomingPigeonPattern()
    label.new(x = bar_index, y = low, text = "Paloma mensajera", style=label.style_label_down, color=color.rgb(189, 236, 182), size=size.small, yloc=yloc.belowbar)
    homingPigeonCounter := homingPigeonCounter + 1
else if camdPattern.isBullishCounterAttackLinePattern()
    label.new(x = bar_index, y = low, text = "Línea de contraataque alcista", style=label.style_label_down, color=color.rgb(189, 236, 182), size=size.small, yloc=yloc.belowbar)
else if camdPattern.isBullishCounterAttackLinePattern()
    label.new(x = bar_index, y = low, text = "Línea de contraataque bajista", style=label.style_label_down, color=color.rgb(242,186,201,0), size=size.small, yloc=yloc.belowbar)
else if camdPattern.isThreeWhiteSoldiersPattern()
    label.new(x = bar_index, y = low, text = "Tres soldados blancos", style=label.style_label_down, color=color.rgb(189, 236, 182), size=size.small, yloc=yloc.belowbar)
else if camdPattern.isThreeBlackCrowsPattern()
    label.new(x = bar_index, y = low, text = "Tres cuervos negros", style=label.style_label_down, color=color.rgb(242,186,201,0), size=size.small, yloc=yloc.belowbar)
else if isThreeIdenticalBlackCrows
    label.new(x = bar_index, y = low, text = "Tres cuervos negros idénticos", style=label.style_label_down, color=color.rgb(242,186,201,0), size=size.small, yloc=yloc.belowbar)
else if isAdvanceBlock
    label.new(x = bar_index, y = low, text = "Parada previa", style=label.style_label_down, color=color.rgb(242,186,201,0), size=size.small, yloc=yloc.belowbar)
    advanceBlockCounter := advanceBlockCounter + 1
else if isDeliberation
    label.new(x = bar_index, y = low, text = "reflexión", style=label.style_label_down, color=color.rgb(242,186,201,0), size=size.small, yloc=yloc.belowbar)
    deliberationCounter := deliberationCounter + 1
else if isUniqueThreeRiversBottom
    label.new(x = bar_index, y = low, text = "Suelo de tres ríos", style=label.style_label_down, color=color.rgb(189, 236, 182), size=size.small, yloc=yloc.belowbar)
    uniqueThreeRiversBottomCounter := uniqueThreeRiversBottomCounter + 1
else if isThreeStarsInTheSouth
    label.new(x = bar_index, y = low, text = "Tres estrellas al sur", style=label.style_label_down, color=color.rgb(189, 236, 182), size=size.small, yloc=yloc.belowbar)
    threeStarsInTheSouthCounter := threeStarsInTheSouthCounter + 1
else if isBullishBreakaway
    label.new(x = bar_index, y = low, text = "Escape alcista", style=label.style_label_down, color=color.rgb(189, 236, 182), size=size.small, yloc=yloc.belowbar)
    bullishBreakawayCounter := bullishBreakawayCounter + 1
else if isBearishBreakaway
    label.new(x = bar_index, y = low, text = "Escape bajista", style=label.style_label_down, color=color.rgb(242,186,201,0), size=size.small, yloc=yloc.belowbar)
    bearishBreakawayCounter := bearishBreakawayCounter + 1
else if isConcealingBabySwallow
    label.new(x = bar_index, y = low, text = "Bebé oculto", style=label.style_label_down, color=color.rgb(189, 236, 182), size=size.small, yloc=yloc.belowbar)
    concealingBabySwallowCounter := concealingBabySwallowCounter + 1
else if isStickSandwich
    label.new(x = bar_index, y = low, text = "Stick Sandwich", style=label.style_label_down, color=color.rgb(189, 236, 182), size=size.small, yloc=yloc.belowbar)
    stickSandwichCounter := stickSandwichCounter + 1
else if isMatchingLow
    label.new(x = bar_index, y = low, text = "Mínimos comunes", style=label.style_label_down, color=color.rgb(189, 236, 182), size=size.small, yloc=yloc.belowbar)
    matchingLowCounter := matchingLowCounter + 1
else if isLadderBottom
    label.new(x = bar_index, y = low, text = "Suelo escalonado", style=label.style_label_down, color=color.rgb(189, 236, 182), size=size.small, yloc=yloc.belowbar)
    ladderBottomCounter := ladderBottomCounter + 1
else if isThrustingLine
    label.new(x = bar_index, y = low, text = "Línea de avance", style=label.style_label_down, color=color.rgb(242,186,201,0), size=size.small, yloc=yloc.belowbar)
    thrustingLineCounter := thrustingLineCounter + 1
else if isInNeck
    label.new(x = bar_index, y = low, text = "Avance in-neck", style=label.style_label_down, color=color.rgb(242,186,201,0), size=size.small, yloc=yloc.belowbar)
    inNeckCounter := inNeckCounter + 1
else if isOnNeck
    label.new(x = bar_index, y = low, text = "Avance on-neck", style=label.style_label_down, color=color.rgb(242,186,201,0), size=size.small, yloc=yloc.belowbar)
    onNeckCounter := onNeckCounter + 1
else if isBullishSeparatingLines
    label.new(x = bar_index, y = low, text = "Líneas de separación alcistas", style=label.style_label_down, color=color.rgb(189, 236, 182), size=size.small, yloc=yloc.belowbar)
    bullishSeparatingLinesCounter := bullishSeparatingLinesCounter + 1
else if isBearishSeparatingLines
    label.new(x = bar_index, y = low, text = "Líneas de separación bajistas", style=label.style_label_down, color=color.rgb(242,186,201,0), size=size.small, yloc=yloc.belowbar)
    bearishSeparatingLinesCounter := bearishSeparatingLinesCounter + 1

// Imprimo los contadores de los patrones en la ventana de datos.
plotchar(bullishBeltHoldLineCounter, "Presa de cinturón alcista", "", location = location.top)
plotchar(bearishBeltHoldLineCounter, "Presa de cinturón bajista", "", location = location.top)
plotchar(homingPigeonCounter, "Paloma mensajera", "", location = location.top)
plotchar(advanceBlockCounter, "Parada previa", "", location = location.top)
plotchar(deliberationCounter, "reflexión", "", location = location.top)
plotchar(uniqueThreeRiversBottomCounter, "Suelo de tres ríos", "", location = location.top)
plotchar(threeStarsInTheSouthCounter, "Tres estrellas al sur", "", location = location.top)
plotchar(bullishBreakawayCounter, "Escape alcista", "", location = location.top)
plotchar(bearishBreakawayCounter, "Escape bajista", "", location = location.top)
plotchar(concealingBabySwallowCounter, "Bebé oculto", "", location = location.top)
plotchar(stickSandwichCounter, "Stick Sandwich", "", location = location.top)
plotchar(matchingLowCounter, "Mínimos comunes", "", location = location.top)
plotchar(ladderBottomCounter, "Suelo escalonado", "", location = location.top)
plotchar(thrustingLineCounter, "Línea de avance", "", location = location.top)
plotchar(inNeckCounter, "Avance in-neck", "", location = location.top)
plotchar(onNeckCounter, "Avance on-neck", "", location = location.top)
plotchar(bullishSeparatingLinesCounter, "Líneas de separación alcistas", "", location = location.top)
plotchar(bearishSeparatingLinesCounter, "Líneas de separación bajistas", "", location = location.top)
