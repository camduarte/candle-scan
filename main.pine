// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © cdu4rte

//@version=5
indicator(title = "Patrones", overlay = true)

import cdu4rte/camdPattern/40

const string PATTERN_DOJI_STAR = "Estrella Doji"
const string PATTERN_DRAGONFLY_DOJI = "Doji libélula"
const string PATTERN_LONGLEGGED_DOJI = "Doji de piernas largas"
const string PATTERN_GRAVESTONE_DOJI = "Doji lápida"
const string PATTERN_THREE_IDENTICAL_BLACK_CROWS = "Tres cuervos negros idénticos"
const string PATTERN_ADVANCE_BLOCK = "Parada previa"
const string PATTERN_DELIBERATION = "reflexión"
const string PATTERN_UNIQUE_THREE_RIVERS_BOTTOM = "Suelo de tres ríos"
const string PATTERN_THREE_STARS_IN_THE_SOUTH = "Tres estrellas al sur"
const string PATTERN_BULLISH_BREAKAWAY = "Escape alcista"
const string PATTERN_BEARISH_BREAKAWAY = "Escape bajista"
const string PATTERN_CONCEALING_BABY_SWALLOW = "Bebé oculto"
const string PATTERN_STICK_SANDWICH = "Stick Sandwich"
const string PATTERN_MATCHING_LOW = "Mínimos comunes"
const string PATTERN_LADDER_BOTTOM = "Suelo escalonado"
const string PATTERN_THRUSTING_LINE = "Línea de avance"
const string PATTERN_IN_NECK = "Avance in-neck"
const string PATTERN_ON_NECK = "Avance on-neck"
const string PATTERN_BULLISH_SEPARATING_LINES = "Líneas de separación alcistas"
const string PATTERN_BEARISH_SEPARATING_LINES = "Líneas de separación bajistas"
const string PATTERN_RISING_THREE_METHODS = "Método de tres al alza"
const string PATTERN_FALLING_THREE_METHODS = "Método de tres a la baja"
const string PATTERN_HAMMER = "Martillo"
const string PATTERN_INVERTED_HAMMER = "Martillo invertido"
const string PATTERN_HANGING_MAN = "Ahorcado"
const string PATTERN_SHOOTING_STAR = "Estrella Fugaz"
const string PATTERN_BULLISH_BELT_HOLD_LINE = "Presa de cinturón alcista"
const string PATTERN_BEARISH_BELT_HOLD_LINE  = "Presa de cinturón bajista"
const string PATTERN_BULLISH_ENGULFING = "Envolvente alcista"
const string PATTERN_BEARISH_ENGULFING = "Envolvente bajista"
const string PATTERN_BULLISH_HARAMI = "Harami alcista"
const string PATTERN_BEARISH_HARAMI = "Harami bajista"
const string PATTERN_HOMING_PIGEON = "Paloma mensajera"
const string PATTERN_BULLISH_COUNTER_ATTACK_LINE = "Línea de contraataque alcista"
const string PATTERN_BEARISH_COUNTER_ATTACK_LINE = "Línea de contraataque bajista"
const string PATTERN_THREE_WHITE_SOLDIERS = "Tres soldados blancos"
const string PATTERN_THREE_BLACK_CROWS = "Tres cuervos negros"
const string PATTERN_MAT_HOLD_BULLISH = "Presa de suelo alcista"
const string PATTERN_BULLISH_THREE_LINE_STRIKE = "Triple strike alcista"
const string PATTERN_BEARISH_THREE_LINE_STRIKE = "Triple strike bajista"
const string PATTERN_BULLISH_DOJI_STAR = "Estrella Doji alcista"
const string PATTERN_BEARISH_DOJI_STAR = "Estrella Doji bajista"
const string PATTERN_MORNING_STAR = "Estrella del amanecer"
const string PATTERN_EVENING_STAR = "Estrella del atardecer"
const string PATTERN_MORNING_DOJI_STAR = "Estrella Doji del amanecer"
const string PATTERN_EVENING_DOJI_STAR = "Estrella Doji del atardecer"
const string PATTERN_BULLISH_ABANDONED_BABY = "Bebé abandonado alcista"
const string PATTERN_BEARISH_ABANDONED_BABY = "Bebé abandonado bajista"
const string PATTERN_BULLISH_TRI_STAR = "Triple estrella alcista"
const string PATTERN_BEARISH_TRI_STAR = "Triple estrella bajista"
const string PATTERN_UPSIDE_GAP_TWO_CROWS = "Dos cuervos en hueco alcista"
const string PATTERN_TWO_CROWS = "Dos cuervos"
const string PATTERN_UPSIDE_TASUKI_GAP = "Hueco alcista Tasuki"
const string PATTERN_DOWNSIDE_TASUKI_GAP = "Hueco bajista Tasuki"
const string PATTER_UPSIDE_GAP_THREE_METHODS = "Hueco alcista en método de tres"
const string PATTERN_DOWNSIDE_GAP_THREE_METHODS = "Hueco bajista en método de tres"
const string PATTERN_UPSIDE_GAPPING_SIDE_BY_SIDE_WHITE_LINES = "Hueco alcista con velas blancas alineadas"
const string PATTER_DOWNSIDE_GAPPING_SIDE_BY_SIDE_WHITE_LINES = "Hueco bajista con velas blancas alineadas"
const string PATTER_BULLISH_KICKING = "Golpe alcista"
const string PATTER_BEARISH_KICKING = "Golpe bajista"

// Parámetro de entrada para habilitar/deshabilitar herarmientas desde el entorno gráfico
bool showPattern = input(true, "Mostrar Patrónes")
bool showBarNearToEMA14 = input(false, "Vela cerca de la EMA de 14")

bool showHammer = input(true, PATTERN_HAMMER)
bool showDojiStar = input(false, PATTERN_DOJI_STAR)
bool showDragonflyDoji = input(false, PATTERN_DRAGONFLY_DOJI)
bool showLongLeggedDoji = input(false, PATTERN_LONGLEGGED_DOJI)
bool showGravestoneDoji = input(false, PATTERN_GRAVESTONE_DOJI)
bool showThreeIdenticalBlackCrows = input(true, PATTERN_THREE_IDENTICAL_BLACK_CROWS)
bool showAdvanceBlock = input(true, PATTERN_ADVANCE_BLOCK)
bool showDeliberation = input(true, PATTERN_DELIBERATION)
bool showUniqueThreeRiversBottom = input(true, PATTERN_UNIQUE_THREE_RIVERS_BOTTOM)
bool showThreeStarsInTheSouth = input(true, PATTERN_THREE_STARS_IN_THE_SOUTH)
bool showBullishBreakaway = input(true, PATTERN_BULLISH_BREAKAWAY)
bool showBearishBreakaway = input(true, PATTERN_BEARISH_BREAKAWAY)
bool showConcealingBabySwallow = input(true, PATTERN_CONCEALING_BABY_SWALLOW)
bool showStickSandwich = input(true, PATTERN_STICK_SANDWICH)
bool showMatchingLow = input(true, PATTERN_MATCHING_LOW)
bool showLadderBottom = input(true, PATTERN_LADDER_BOTTOM)
bool showThrustingLine = input(true, PATTERN_THRUSTING_LINE)
bool showInNeck = input(true, PATTERN_IN_NECK)
bool showOnNeck = input(true, PATTERN_ON_NECK)
bool showBullishSeparatingLines = input(true, PATTERN_BULLISH_SEPARATING_LINES)
bool showBearishSeparatingLines = input(true, PATTERN_BEARISH_SEPARATING_LINES)
bool showRisingThreeMethods = input(true, PATTERN_RISING_THREE_METHODS)
bool showFallingThreeMethods = input(true, PATTERN_FALLING_THREE_METHODS)
bool showInvertedHammer = input(true, PATTERN_INVERTED_HAMMER)
bool showHangingMan = input(true, PATTERN_HANGING_MAN)
bool showShootingStar = input(true, PATTERN_SHOOTING_STAR)
bool showBullishBeltHoldLine = input(true, PATTERN_BULLISH_BELT_HOLD_LINE)
bool showBearishBeltHoldLine = input(true, PATTERN_BEARISH_BELT_HOLD_LINE)
bool showBullishEngulfing = input(true, PATTERN_BULLISH_ENGULFING)
bool showBearishEngulfing = input(true, PATTERN_BEARISH_ENGULFING)
bool showBullishHarami = input(true, PATTERN_BULLISH_HARAMI)
bool showBearishHarami = input(true, PATTERN_BEARISH_HARAMI)
bool showHomingPigeon = input(true, PATTERN_HOMING_PIGEON)
bool showBullishCounterAttackLine = input(true, PATTERN_BULLISH_COUNTER_ATTACK_LINE)
bool showBearishCounterAttackLine = input(true, PATTERN_BEARISH_COUNTER_ATTACK_LINE)
bool showThreeWhiteSoldiers = input(true, PATTERN_THREE_WHITE_SOLDIERS)
bool showThreeBlackCrows = input(true, PATTERN_THREE_BLACK_CROWS)
bool showMatHoldBullish = input(true, PATTERN_MAT_HOLD_BULLISH)
bool showBullishThreeLineStrike = input(true, PATTERN_BULLISH_THREE_LINE_STRIKE)
bool showBearishThreeLineStrike = input(true, PATTERN_BEARISH_THREE_LINE_STRIKE)
bool showBullishDojiStar = input(true, PATTERN_BULLISH_DOJI_STAR)
bool showBearishDojiStar = input(true, PATTERN_BEARISH_DOJI_STAR)
bool showMorningStar = input(true, PATTERN_MORNING_STAR)
bool showEveningStar = input(true, PATTERN_EVENING_STAR)
bool showMorningDojiStar = input(true, PATTERN_MORNING_DOJI_STAR)
bool showEveningDojiStar = input(true, PATTERN_EVENING_DOJI_STAR)
bool showBullishAbandonedBaby = input(true, PATTERN_BULLISH_ABANDONED_BABY)
bool showBearishAbandonedBaby = input(true, PATTERN_BEARISH_ABANDONED_BABY)
bool showBullishTriStar = input(true, PATTERN_BULLISH_TRI_STAR)
bool showBearishTriStar = input(true, PATTERN_BEARISH_TRI_STAR)
bool showUpsideGapTwoCrows = input(true, PATTERN_UPSIDE_GAP_TWO_CROWS)
bool showTwoCrows = input(true, PATTERN_TWO_CROWS)
bool showUpsideTasukiGap = input(true, PATTERN_UPSIDE_TASUKI_GAP)
bool showDownsideTasukiGap = input(true, PATTERN_DOWNSIDE_TASUKI_GAP)
bool showUpsideGapThreeMethods = input(true, PATTER_UPSIDE_GAP_THREE_METHODS)
bool showDownsideGapThreeMethods = input(true, PATTERN_DOWNSIDE_GAP_THREE_METHODS)
bool showUpsideGappingSideBySideWhiteLines = input(true, PATTERN_UPSIDE_GAPPING_SIDE_BY_SIDE_WHITE_LINES)
bool showDownsideGappingSideBySideWhiteLines = input(true, PATTER_DOWNSIDE_GAPPING_SIDE_BY_SIDE_WHITE_LINES)
bool showBullishKicking = input(true, PATTER_BULLISH_KICKING)
bool showBearishKicking = input(true, PATTER_BEARISH_KICKING)

// Contadores
var int dojiStarCounter = 0
var int dragonflyDojiCounter = 0
var int longleggedDojiCounter = 0
var int gravestoneDojiCounter = 0
var int hammerCounter = 0
var int invertedHamerCounter = 0
var int hangingManCounter = 0
var int shootingStarCounter = 0
var int bullishBeltHoldLineCounter = 0
var int bearishBeltHoldLineCounter = 0
var int bullishEngulfingCounter = 0
var int bearishEngulfingCounter = 0
var int bullishHaramiCounter = 0
var int bearishHaramiCounter = 0
var int homingPigeonCounter = 0
var int threeIdenticalBlackCrowsCounter = 0
var int bullishCounterAttackLineCounter = 0
var int bearishCounterAttackLineCounter = 0
var int threeWhiteSoldiersCounter = 0
var int threeBlackCrowsCounter = 0
var int advanceBlockCounter = 0
var int deliberationCounter = 0
var int uniqueThreeRiversBottomCounter = 0
var int threeStarsInTheSouthCounter = 0
var int bullishBreakawayCounter = 0
var int bearishBreakawayCounter = 0
var int concealingBabySwallowCounter = 0
var int stickSandwichCounter = 0
var int matchingLowCounter = 0
var int ladderBottomCounter = 0
var int thrustingLineCounter = 0
var int inNeckCounter = 0
var int onNeckCounter = 0
var int bullishSeparatingLinesCounter = 0
var int bearishSeparatingLinesCounter = 0
var int risingThreeMethodsCounter = 0
var int fallingThreeMethodsCounter = 0
var int matHoldBullishCounter = 0
var int bullishThreeLineStrikeCounter = 0
var int bearishThreeLineStrikeCounter = 0
var int bullishDojiStarCounter = 0
var int bearishDojiStarCounter = 0
var int morningStarCounter = 0
var int eveningStarCounter = 0
var int morningDojiStarCounter = 0
var int eveningDojiStarCounter = 0
var int bullishAbandonedBabyCounter = 0
var int bearishAbandonedBabyCounter = 0
var int bullishTriStarCounter = 0
var int bearishTriStarCounter = 0
var int upsideGapTwoCrowsCounter  = 0
var int twoCrowsCounter = 0
var int upsideTasukiGapCounter = 0
var int downsideTasukiGapCounter = 0
var int upsideGapThreeMethodsCounter = 0
var int downsideGapThreeMethodsCounter = 0
var int upsideGappingSideBySideWhiteLinesCounter = 0
var int downsideGappingSideBySideWhiteLinesCounter = 0
var int bullishKickingCounter = 0
var int bearishKickingCounter = 0

const color COLOR_GREEN = color.rgb(189, 236, 182)
const color COLOR_RED = color.rgb(242,186,201,0)
const color COLOR_BLUE = color.new(color.blue, 90)
const color COLOR_YELLOW = color.new(color.yellow, 0)

// Llamada a los patrones.
isDojiStar = camdPattern.isDojiStarPattern(0)
isDragonflyDoji = camdPattern.isDragonflyDojiPattern(0)
isLongleggedDoji = camdPattern.isLongleggedDojiPattern(0)
isGravestoneDoji = camdPattern.isGravestoneDojiPattern(0)
isHammer = camdPattern.isHammerPattern()
isInvertedHammer = camdPattern.isInvertedHammerPattern()
isHangingMan = camdPattern.isHangingManPattern()
isShootingStar = camdPattern.isShootingStarPattern()
isBullishBeltHoldLine = camdPattern.isBullishBeltHoldLinePattern()
isBearishBeltHoldLine = camdPattern.isBearishBeltHoldLinePattern()
isBullishEngulfing = camdPattern.isBullishEngulfingPattern()
isBearishEngulfing = camdPattern.isBearishEngulfingPattern()
isBullishHarami = camdPattern.isBullishHaramiPattern()
isBearishHarami = camdPattern.isBearishHaramiPattern()
isHomingPigeon = camdPattern.isHomingPigeonPattern()
isThreeIdenticalBlackCrows = camdPattern.isThreeIdenticalBlackCrowsPattern()
isBullishCounterAttackLine = camdPattern.isBullishCounterAttackLinePattern()
isBearishCounterAttackLine = camdPattern.isBearishCounterAttackLinePattern()
isThreeWhiteSoldiers = camdPattern.isThreeWhiteSoldiersPattern()
isThreeBlackCrows = camdPattern.isThreeBlackCrowsPattern()
isAdvanceBlock = camdPattern.isAdvanceBlockPattern()
isDeliberation = camdPattern.isDeliberationPattern()
isUniqueThreeRiversBottom = camdPattern.isUniqueThreeRiversBottomPattern()
isThreeStarsInTheSouth = camdPattern.isThreeStarsInTheSouthPattern()
isBullishBreakaway = camdPattern.isBullishBreakawayPattern()
isBearishBreakaway = camdPattern.isBearishBreakawayPattern()
isConcealingBabySwallow =  camdPattern.isConcealingBabySwallowPattern()
isStickSandwich = camdPattern.isStickSandwichPattern()
isMatchingLow = camdPattern.isMatchingLowPattern()
isLadderBottom = camdPattern.isLadderBottomPattern()
isThrustingLine = camdPattern.isThrustingLinePattern()
isInNeck = camdPattern.isInNeckPatter()
isOnNeck = camdPattern.isOnNeckPatter()
isBullishSeparatingLines = camdPattern.isBullishSeparatingLinesPattern()
isBearishSeparatingLines = camdPattern.isBearishSeparatingLinesPattern()
isRisingThreeMethods = camdPattern.isRisingThreeMethodsPattern()
isFallingThreeMethods = camdPattern.isFallingThreeMethodsPattern()
isMatHoldBullish = camdPattern.isMatHoldBullishPattern()
isBullishThreeLineStrike = camdPattern.isBullishThreeLineStrikePattern()
isBearishThreeLineStrike = camdPattern.isBearishThreeLineStrikePattern()
isBullishDojiStar = camdPattern.isBullishDojiStarPattern()
isBearishDojiStar = camdPattern.isBearishDojiStarPattern()
isMorningStar = camdPattern.isMorningStarPattern()
isEveningStar = camdPattern.isEveningStarPattern()
isMorningDojiStar = camdPattern.isMorningDojiStarPattern()
isEveningDojiStar = camdPattern.isEveningDojiStarPattern()
isBullisAbandonedBaby = camdPattern.isBullishAbandonedBabyPattern()
isBearisAbandonedBaby = camdPattern.isBearishAbandonedBabyPattern()
isBullishTriStar = camdPattern.isBullishTriStarPattern()
isBearishTriStar = camdPattern.isBearishTriStarPattern()
isUpsideGapTwoCrows = camdPattern.isUpsideGapTwoCrowsPattern()
isTwoCrows = camdPattern.isTwoCrowsPattern()
isUpsideTasukiGap = camdPattern.isUpsideTasukiGapPattern()
isDownsideTasukiGap = camdPattern.isDownsideTasukiGapPattern()
isUpsideGapThreeMethods = camdPattern.isUpsideGapThreeMethodsPattern()
isDownsideGapThreeMethods = camdPattern.isDownsideGapThreeMethodsPattern()
isUpsideGappingSideBySideWhiteLines = camdPattern.isUpsideGappingSideBySideWhiteLinesPattern()
isDownsideGappingSideBySideWhiteLines = camdPattern.isDownsideGappingSideBySideWhiteLinesPattern()
isBullishKicking  = camdPattern.isBullishKickingPattern()
isBearishKicking  = camdPattern.isBearishKickingPattern()

//@function Inserta una etiqueta en el gráfico.
//@param txt El texto de la etiqueta.
//@param color El color de la etiquita.
insertLabel(string txt, color col) =>
    label.new(x = bar_index, y = low, text = txt, style = label.style_label_up, color = col, size = size.normal, yloc = yloc.belowbar)

//@function Imprime la fecha de la vela actual en el log de Pine.
printCandleDate() =>
    log.info("Fecha: {0}-{1}-{2}", dayofmonth(time), month(time), year(time)) 

//@function Incrementa el contador.
//@param counter El contador.
//@returns El contador incrementado.
incrementCounter(int counter) =>
    counter + 1

// Agrego etiqueta del patrón a las velas.
if showPattern
    if isDojiStar and showDojiStar
        insertLabel(PATTERN_DOJI_STAR, COLOR_YELLOW)
        dojiStarCounter := incrementCounter(dojiStarCounter)
    if isDragonflyDoji and showDragonflyDoji
        insertLabel(PATTERN_DRAGONFLY_DOJI, COLOR_YELLOW)
        dragonflyDojiCounter := incrementCounter(dragonflyDojiCounter)
    if isLongleggedDoji and showLongLeggedDoji
        insertLabel(PATTERN_LONGLEGGED_DOJI, COLOR_YELLOW)
        longleggedDojiCounter := incrementCounter(longleggedDojiCounter)
    if isGravestoneDoji and showGravestoneDoji
        insertLabel(PATTERN_GRAVESTONE_DOJI, COLOR_YELLOW)
        gravestoneDojiCounter := incrementCounter(gravestoneDojiCounter)
    if isHammer and showHammer
        insertLabel(PATTERN_HAMMER, COLOR_GREEN)
        hammerCounter := incrementCounter(hammerCounter)
    if isInvertedHammer and showInvertedHammer
        insertLabel(PATTERN_INVERTED_HAMMER, COLOR_GREEN)
        invertedHamerCounter := incrementCounter(invertedHamerCounter)
    if isHangingMan and showHangingMan
        insertLabel(PATTERN_HANGING_MAN, COLOR_RED)
        hangingManCounter := incrementCounter(hangingManCounter)
    if isShootingStar and showShootingStar
        insertLabel(PATTERN_SHOOTING_STAR, COLOR_RED)
        shootingStarCounter := incrementCounter(shootingStarCounter)
    if isBullishBeltHoldLine and showBullishBeltHoldLine
        insertLabel(PATTERN_BULLISH_BELT_HOLD_LINE, COLOR_GREEN)    
        bullishBeltHoldLineCounter := incrementCounter(bullishBeltHoldLineCounter)
    if isBearishBeltHoldLine and showBearishBeltHoldLine
        insertLabel(PATTERN_BEARISH_BELT_HOLD_LINE, COLOR_RED)    
        bearishBeltHoldLineCounter := incrementCounter(bearishBeltHoldLineCounter)
    if isBullishEngulfing and showBullishEngulfing
        insertLabel(PATTERN_BULLISH_ENGULFING, COLOR_GREEN)
        bullishEngulfingCounter := incrementCounter(bullishEngulfingCounter)
    if isBearishEngulfing and showBearishEngulfing
        insertLabel(PATTERN_BEARISH_ENGULFING, COLOR_RED)
        bearishEngulfingCounter := incrementCounter(bearishEngulfingCounter)
    if isBullishHarami and showBullishHarami
        insertLabel(PATTERN_BULLISH_HARAMI, COLOR_GREEN)
        bullishHaramiCounter := incrementCounter(bullishHaramiCounter)
    if isBearishHarami and showBearishHarami
        insertLabel(PATTERN_BEARISH_HARAMI, COLOR_RED)
        bearishHaramiCounter := incrementCounter(bearishHaramiCounter)
    if isHomingPigeon and showHomingPigeon
        insertLabel(PATTERN_HOMING_PIGEON, COLOR_GREEN)
        homingPigeonCounter := incrementCounter(homingPigeonCounter)
    if isThreeBlackCrows and showThreeBlackCrows
        insertLabel(PATTERN_THREE_BLACK_CROWS, COLOR_RED)
        threeBlackCrowsCounter := incrementCounter(threeBlackCrowsCounter)
    if isThreeIdenticalBlackCrows and showThreeIdenticalBlackCrows
        insertLabel(PATTERN_THREE_IDENTICAL_BLACK_CROWS, COLOR_RED)
        threeIdenticalBlackCrowsCounter := incrementCounter(threeIdenticalBlackCrowsCounter)
    if isAdvanceBlock and showAdvanceBlock
        insertLabel(PATTERN_ADVANCE_BLOCK, COLOR_RED)
        advanceBlockCounter := incrementCounter(advanceBlockCounter)
    if isDeliberation and showDeliberation
        insertLabel(PATTERN_DELIBERATION, COLOR_RED)
        deliberationCounter := incrementCounter(deliberationCounter)
    if isUniqueThreeRiversBottom and showUniqueThreeRiversBottom
        insertLabel(PATTERN_UNIQUE_THREE_RIVERS_BOTTOM, COLOR_GREEN)
        uniqueThreeRiversBottomCounter := incrementCounter(uniqueThreeRiversBottomCounter)
    if isThreeStarsInTheSouth and showThreeStarsInTheSouth
        insertLabel(PATTERN_THREE_STARS_IN_THE_SOUTH, COLOR_GREEN)
        threeStarsInTheSouthCounter := incrementCounter(threeStarsInTheSouthCounter)
    if isBullishBreakaway and showBullishBreakaway
        insertLabel(PATTERN_BULLISH_BREAKAWAY, COLOR_GREEN)
        bullishBreakawayCounter := incrementCounter(bullishBreakawayCounter)
    if isBearishBreakaway and showBearishBreakaway
        insertLabel(PATTERN_BEARISH_BREAKAWAY, COLOR_RED)
        bearishBreakawayCounter := incrementCounter(bearishBreakawayCounter)
    if isConcealingBabySwallow and showConcealingBabySwallow
        insertLabel(PATTERN_CONCEALING_BABY_SWALLOW, COLOR_GREEN)
        concealingBabySwallowCounter := incrementCounter(concealingBabySwallowCounter)
    if isStickSandwich and showStickSandwich
        insertLabel(PATTERN_STICK_SANDWICH, COLOR_GREEN)
        stickSandwichCounter := incrementCounter(stickSandwichCounter)
    if isMatchingLow and showMatchingLow
        insertLabel(PATTERN_MATCHING_LOW, COLOR_GREEN)
        matchingLowCounter := incrementCounter(matchingLowCounter)
    if isLadderBottom and showLadderBottom
        insertLabel(PATTERN_LADDER_BOTTOM, COLOR_GREEN)
        ladderBottomCounter := incrementCounter(ladderBottomCounter)
    if isThrustingLine and showThrustingLine
        insertLabel(PATTERN_THRUSTING_LINE, COLOR_RED)
        thrustingLineCounter := incrementCounter(thrustingLineCounter)
    if isInNeck and showInNeck
        insertLabel(PATTERN_IN_NECK, COLOR_RED)
        inNeckCounter := incrementCounter(inNeckCounter)
    if isOnNeck and showOnNeck
        insertLabel(PATTERN_ON_NECK, COLOR_RED)
        onNeckCounter := incrementCounter(onNeckCounter)
    if isBullishSeparatingLines and showBullishSeparatingLines
        insertLabel(PATTERN_BULLISH_SEPARATING_LINES, COLOR_GREEN)
        bullishSeparatingLinesCounter := incrementCounter(bullishSeparatingLinesCounter)
    if isBearishSeparatingLines and showBearishSeparatingLines
        insertLabel(PATTERN_BEARISH_SEPARATING_LINES, COLOR_RED)
        bearishSeparatingLinesCounter := incrementCounter(bearishSeparatingLinesCounter)
    if isRisingThreeMethods and showRisingThreeMethods
        insertLabel(PATTERN_RISING_THREE_METHODS, COLOR_GREEN)
        risingThreeMethodsCounter := incrementCounter(risingThreeMethodsCounter)
    if isFallingThreeMethods and showFallingThreeMethods
        insertLabel(PATTERN_FALLING_THREE_METHODS, COLOR_RED)
        fallingThreeMethodsCounter := incrementCounter(fallingThreeMethodsCounter)
    if isMatHoldBullish and showMatHoldBullish
        insertLabel(PATTERN_MAT_HOLD_BULLISH, COLOR_GREEN)
        matHoldBullishCounter := incrementCounter(matHoldBullishCounter)
    if isBullishThreeLineStrike and showBullishThreeLineStrike
        insertLabel(PATTERN_BULLISH_THREE_LINE_STRIKE, COLOR_GREEN)
        bullishThreeLineStrikeCounter := incrementCounter(bullishThreeLineStrikeCounter)
    if isBearishThreeLineStrike and showBearishThreeLineStrike
        insertLabel(PATTERN_BEARISH_THREE_LINE_STRIKE, COLOR_RED)
        bearishThreeLineStrikeCounter := incrementCounter(bearishThreeLineStrikeCounter)
    if isBullishDojiStar and showBullishDojiStar
        insertLabel(PATTERN_BULLISH_DOJI_STAR, COLOR_GREEN)
        bullishDojiStarCounter := incrementCounter(bullishDojiStarCounter)
    if isThreeWhiteSoldiers and showThreeWhiteSoldiers
        insertLabel(PATTERN_THREE_WHITE_SOLDIERS, COLOR_GREEN)
        threeWhiteSoldiersCounter := incrementCounter(threeWhiteSoldiersCounter)
    if isBullishCounterAttackLine and showBullishCounterAttackLine
        insertLabel(PATTERN_BULLISH_COUNTER_ATTACK_LINE, COLOR_GREEN)
        bullishCounterAttackLineCounter := incrementCounter(bullishCounterAttackLineCounter)
    if isBearishCounterAttackLine and showBearishCounterAttackLine
        insertLabel(PATTERN_BEARISH_COUNTER_ATTACK_LINE, COLOR_RED)
        bearishCounterAttackLineCounter := incrementCounter(bearishCounterAttackLineCounter)
    if isBearishDojiStar and showBearishDojiStar
        insertLabel(PATTERN_BEARISH_DOJI_STAR, COLOR_RED)
        bearishDojiStarCounter := incrementCounter(bearishDojiStarCounter)
    if isMorningStar and showMorningStar
        insertLabel(PATTERN_MORNING_STAR, COLOR_GREEN)
        morningStarCounter := incrementCounter(morningStarCounter)
    if isEveningStar and showEveningStar
        insertLabel(PATTERN_EVENING_STAR, COLOR_RED)
        eveningStarCounter := incrementCounter(eveningStarCounter)
    if isMorningDojiStar and showMorningDojiStar
        insertLabel(PATTERN_MORNING_DOJI_STAR, COLOR_GREEN)
        morningDojiStarCounter := incrementCounter(morningDojiStarCounter)
    if isEveningDojiStar and showEveningDojiStar
        insertLabel(PATTERN_EVENING_DOJI_STAR, COLOR_RED)
        eveningDojiStarCounter := incrementCounter(eveningDojiStarCounter)
    if isBullisAbandonedBaby and showBullishAbandonedBaby
        insertLabel(PATTERN_BULLISH_ABANDONED_BABY, COLOR_GREEN)
        bullishAbandonedBabyCounter := incrementCounter(bullishAbandonedBabyCounter)
    if isBearisAbandonedBaby and showBearishAbandonedBaby
        insertLabel(PATTERN_BEARISH_ABANDONED_BABY, COLOR_RED)
        bearishAbandonedBabyCounter := incrementCounter(bearishAbandonedBabyCounter)
    if isBullishTriStar and showBullishTriStar
        insertLabel(PATTERN_BULLISH_TRI_STAR, COLOR_GREEN)
        bullishTriStarCounter := incrementCounter(bullishTriStarCounter)
    if isBearishTriStar and showBearishTriStar
        insertLabel(PATTERN_BEARISH_TRI_STAR, COLOR_RED)
        bearishTriStarCounter := incrementCounter(bearishTriStarCounter)
    if isUpsideGapTwoCrows and showUpsideGapTwoCrows
        insertLabel(PATTERN_UPSIDE_GAP_TWO_CROWS, COLOR_RED)
        upsideGapTwoCrowsCounter := incrementCounter(upsideGapTwoCrowsCounter)
    if isTwoCrows and showTwoCrows
        insertLabel(PATTERN_TWO_CROWS, COLOR_RED)
        twoCrowsCounter := incrementCounter(twoCrowsCounter)
    if isUpsideTasukiGap and showUpsideTasukiGap
        insertLabel(PATTERN_UPSIDE_TASUKI_GAP, COLOR_GREEN)
        upsideTasukiGapCounter := incrementCounter(upsideTasukiGapCounter)
    if isDownsideTasukiGap and showDownsideTasukiGap
        insertLabel(PATTERN_DOWNSIDE_TASUKI_GAP, COLOR_RED)
        downsideTasukiGapCounter := incrementCounter(downsideTasukiGapCounter)
    if isUpsideGapThreeMethods and showUpsideGapThreeMethods
        insertLabel(PATTER_UPSIDE_GAP_THREE_METHODS, COLOR_GREEN)
        upsideGapThreeMethodsCounter := incrementCounter(upsideGapThreeMethodsCounter)
    if isDownsideGapThreeMethods and showDownsideGapThreeMethods
        insertLabel(PATTERN_DOWNSIDE_GAP_THREE_METHODS, COLOR_RED)
        downsideGapThreeMethodsCounter := incrementCounter(downsideGapThreeMethodsCounter)
    if isUpsideGappingSideBySideWhiteLines and showUpsideGappingSideBySideWhiteLines
        insertLabel(PATTERN_UPSIDE_GAPPING_SIDE_BY_SIDE_WHITE_LINES, COLOR_GREEN)
        upsideGappingSideBySideWhiteLinesCounter := incrementCounter(upsideGappingSideBySideWhiteLinesCounter)
    if isDownsideGappingSideBySideWhiteLines and showDownsideGappingSideBySideWhiteLines
        insertLabel(PATTER_DOWNSIDE_GAPPING_SIDE_BY_SIDE_WHITE_LINES, COLOR_RED)
        downsideGappingSideBySideWhiteLinesCounter := incrementCounter(downsideGappingSideBySideWhiteLinesCounter)
    if isBullishKicking and showBullishKicking
        insertLabel(PATTER_BULLISH_KICKING, COLOR_GREEN)
        bullishKickingCounter := incrementCounter(bullishKickingCounter)
    if isBearishKicking and showBearishKicking
        insertLabel(PATTER_BEARISH_KICKING, COLOR_RED)
        bearishKickingCounter := incrementCounter(bearishKickingCounter)
   
// Imprimo los contadores de los patrones en la ventana de datos.
// plotchar(dojiStarCounter, PATTERN_DOJI_STAR, "", location = location.top)
// plotchar(dragonflyDojiCounter, PATTERN_DRAGONFLY_DOJI, "", location = location.top)
// plotchar(longleggedDojiCounter, PATTERN_LONGLEGGED_DOJI, "", location = location.top)
// plotchar(gravestoneDojiCounter, PATTERN_GRAVESTONE_DOJI, "", location = location.top)
// plotchar(hammerCounter, PATTERN_HAMMER, "", location = location.top)
// plotchar(invertedHamerCounter, PATTERN_INVERTED_HAMMER, "", location = location.top)
// plotchar(hangingManCounter, PATTERN_HANGING_MAN, "", location = location.top)
// plotchar(bullishBeltHoldLineCounter, PATTERN_BULLISH_BELT_HOLD_LINE, "", location = location.top)
// plotchar(bearishBeltHoldLineCounter, PATTERN_BEARISH_BELT_HOLD_LINE, "", location = location.top)
// plotchar(homingPigeonCounter, PATTERN_HOMING_PIGEON, "", location = location.top)
// plotchar(advanceBlockCounter, PATTERN_ADVANCE_BLOCK, "", location = location.top)
// plotchar(deliberationCounter, PATTERN_DELIBERATION, "", location = location.top)
// plotchar(uniqueThreeRiversBottomCounter, PATTERN_UNIQUE_THREE_RIVERS_BOTTOM, "", location = location.top)
// plotchar(threeStarsInTheSouthCounter, PATTERN_THREE_STARS_IN_THE_SOUTH, "", location = location.top)
// plotchar(bullishBreakawayCounter, PATTERN_BULLISH_BREAKAWAY, "", location = location.top)
// plotchar(bearishBreakawayCounter, PATTERN_BEARISH_BREAKAWAY, "", location = location.top)
// plotchar(concealingBabySwallowCounter, PATTERN_CONCEALING_BABY_SWALLOW, "", location = location.top)
// plotchar(stickSandwichCounter, PATTERN_STICK_SANDWICH, "", location = location.top)
// plotchar(matchingLowCounter, PATTERN_MATCHING_LOW, "", location = location.top)
// plotchar(ladderBottomCounter, PATTERN_LADDER_BOTTOM, "", location = location.top)
// plotchar(thrustingLineCounter, PATTERN_THRUSTING_LINE, "", location = location.top)
// plotchar(inNeckCounter, PATTERN_IN_NECK, "", location = location.top)
// plotchar(onNeckCounter, PATTERN_ON_NECK, "", location = location.top)
// plotchar(bullishSeparatingLinesCounter, PATTERN_BULLISH_SEPARATING_LINES, "", location = location.top)
// plotchar(bearishSeparatingLinesCounter, PATTERN_BEARISH_SEPARATING_LINES, "", location = location.top)
// plotchar(risingThreeMethodsCounter, PATTERN_RISING_THREE_METHODS, "", location = location.top)
// plotchar(fallingThreeMethodsCounter, PATTERN_FALLING_THREE_METHODS, "", location = location.top)
// plotchar(matHoldBullishCounter, PATTERN_MAT_HOLD_BULLISH, "", location = location.top)
// plotchar(bullishThreeLineStrikeCounter, PATTERN_BULLISH_THREE_LINE_STRIKE, "", location = location.top)
// plotchar(bearishThreeLineStrikeCounter, PATTERN_BEARISH_THREE_LINE_STRIKE, "", location = location.top)
// plotchar(bullishDojiStarCounter, PATTERN_BULLISH_DOJI_STAR, "", location = location.top)
// plotchar(bearishDojiStarCounter, PATTERN_BEARISH_DOJI_STAR, "", location = location.top)
// plotchar(morningStarCounter, PATTERN_MORNING_STAR, "", location = location.top)
// plotchar(eveningStarCounter, PATTERN_EVENING_STAR, "", location = location.top)
// plotchar(morningDojiStarCounter, PATTERN_MORNING_DOJI_STAR, "", location = location.top)
// plotchar(eveningDojiStarCounter, PATTERN_EVENING_DOJI_STAR, "", location = location.top)
// plotchar(bullishAbandonedBabyCounter, PATTERN_BULLISH_ABANDONED_BABY, "", location = location.top)
// plotchar(bearishAbandonedBabyCounter, PATTERN_BEARISH_ABANDONED_BABY, "", location = location.top)
// plotchar(bullishTriStarCounter, PATTERN_BULLISH_TRI_STAR, "", location = location.top)
// plotchar(bearishTriStarCounter, PATTERN_BEARISH_TRI_STAR, "", location = location.top)
// plotchar(upsideGapTwoCrowsCounter, PATTERN_UPSIDE_GAP_TWO_CROWS, "", location = location.top)
// plotchar(twoCrowsCounter, PATTERN_TWO_CROWS, "", location = location.top)
// plotchar(upsideTasukiGapCounter, PATTERN_UPSIDE_TASUKI_GAP, "", location = location.top)
// plotchar(downsideTasukiGapCounter, PATTERN_DOWNSIDE_TASUKI_GAP, "", location = location.top)
// plotchar(upsideGapThreeMethodsCounter, PATTER_UPSIDE_GAP_THREE_METHODS, "", location = location.top)
// plotchar(downsideGapThreeMethodsCounter, PATTERN_DOWNSIDE_GAP_THREE_METHODS, "", location = location.top)
// plotchar(upsideGappingSideBySideWhiteLinesCounter, PATTERN_UPSIDE_GAPPING_SIDE_BY_SIDE_WHITE_LINES, "", location = location.top)
// plotchar(downsideGappingSideBySideWhiteLinesCounter, PATTER_DOWNSIDE_GAPPING_SIDE_BY_SIDE_WHITE_LINES, "", location = location.top)
// plotchar(bullishKickingCounter, PATTER_BULLISH_KICKING, "", location = location.top)
// plotchar(bearishKickingCounter, PATTER_BEARISH_KICKING, "", location = location.top)

// Resalta la vela en el gráfico.
// bgcolor(isDojiStar ? COLOR_BLUE : na)
// bgcolor(isDragonflyDoji ? COLOR_BLUE : na)
// bgcolor(isLongleggedDoji ? COLOR_BLUE : na)
// bgcolor(isGravestoneDoji ? COLOR_BLUE : na)
// bgcolor(isHammer ? COLOR_BLUE : na)
// bgcolor(isInvertedHammer ? COLOR_BLUE : na)
// bgcolor(isHangingMan ? COLOR_BLUE : na)
// bgcolor(isShootingStar ? COLOR_BLUE : na)
// bgcolor(isBullishBeltHoldLine ? COLOR_BLUE : na)
// bgcolor(isBearishBeltHoldLine ? COLOR_BLUE : na)
// bgcolor(isBullishEngulfing ? COLOR_BLUE : na)
// bgcolor(isBearishEngulfing ? COLOR_BLUE : na)
// bgcolor(isBullishHarami ? COLOR_BLUE : na)
// bgcolor(isBearishHarami ? COLOR_BLUE : na)
// bgcolor(isHomingPigeon ? COLOR_BLUE : na)
// bgcolor(isThreeBlackCrows ? COLOR_BLUE : na)
// bgcolor(isThreeIdenticalBlackCrows ? COLOR_BLUE : na)
// bgcolor(isAdvanceBlock ? COLOR_BLUE : na)
// bgcolor(isDeliberation ? COLOR_BLUE : na)
// bgcolor(isUniqueThreeRiversBottom ? COLOR_BLUE : na)
// bgcolor(isThreeStarsInTheSouth ? COLOR_BLUE : na)
// bgcolor(isBullishBreakaway ? COLOR_BLUE : na)
// bgcolor(isBearishBreakaway ? COLOR_BLUE : na)
// bgcolor(isConcealingBabySwallow ? COLOR_BLUE : na)
// bgcolor(isStickSandwich ? COLOR_BLUE : na)
// bgcolor(isMatchingLow ? COLOR_BLUE : na)
// bgcolor(isLadderBottom ? COLOR_BLUE : na)
// bgcolor(isThrustingLine ? COLOR_BLUE : na)
// bgcolor(isInNeck ? COLOR_BLUE : na)
// bgcolor(isOnNeck ? COLOR_BLUE : na)
// bgcolor(isBullishSeparatingLines ? COLOR_BLUE : na)
// bgcolor(isBearishSeparatingLines ? COLOR_BLUE : na)
// bgcolor(isRisingThreeMethods ? COLOR_BLUE : na)
// bgcolor(isFallingThreeMethods ? COLOR_BLUE : na)
// bgcolor(isMatHoldBullish ? COLOR_BLUE : na)
// bgcolor(isBullishThreeLineStrike ? COLOR_BLUE : na)
// bgcolor(isBearishThreeLineStrike ? COLOR_BLUE : na)
// bgcolor(isBullishDojiStar ? COLOR_BLUE : na)
// bgcolor(isThreeWhiteSoldiers ? COLOR_BLUE : na)
// bgcolor(isBullishCounterAttackLine ? COLOR_BLUE : na)
// bgcolor(isBearishCounterAttackLine ? COLOR_BLUE : na)
// bgcolor(isBearishDojiStar ? COLOR_BLUE : na)
// bgcolor(isMorningStar ? COLOR_BLUE : na)
// bgcolor(isEveningStar ? COLOR_BLUE : na)
// bgcolor(isMorningDojiStar ? COLOR_BLUE : na)
// bgcolor(isEveningDojiStar ? COLOR_BLUE : na)
// bgcolor(isBullishAbandonedBaby ? COLOR_BLUE : na)
// bgcolor(isBearishAbandonedBaby ? COLOR_BLUE : na)
// bgcolor(isBullishTriStar ? COLOR_BLUE : na)
// bgcolor(isBearishTriStar ? COLOR_BLUE : na)
// bgcolor(isUpsideGapTwoCrows ? COLOR_BLUE : na)
// bgcolor(isTwoCrows ? COLOR_BLUE : na)
// bgcolor(isUpsideTasukiGap ? COLOR_BLUE : na)
// bgcolor(isDownsideTasukiGap ? COLOR_BLUE : na)
// bgcolor(isUpsideGapThreeMethods ? COLOR_BLUE : na)
// bgcolor(isDownsideGapThreeMethods ? COLOR_BLUE : na)
// bgcolor(isUpsideGappingSideBySideWhiteLines ? COLOR_BLUE : na)
// bgcolor(isDownsideGappingSideBySideWhiteLines ? COLOR_BLUE : na)
// bgcolor(isBullishKicking ? COLOR_BLUE : na)
// bgcolor(isBearishKicking ? COLOR_BLUE : na)


// Indicadores
ema14 = ta.ema(close, 14)
ema200 = ta.ema(close, 200)

// Dibuja la EMA en el gráfico principal
plot(ema14, color=color.yellow, linewidth=2)
plot(ema200, color=color.red, linewidth=2)

// Función para verificar si la vela actual está cerca de la EMA de 14
isNearEMA14() =>
    // Calcula la distancia entre el cierre de la vela actual y la EMA de 14
    distance = math.abs(close - ema14)
    // Define un umbral para determinar qué tan cerca queremos que esté la vela
    threshold = ema14 * 0.01 // 1% de la EMA de 14
    // Devuelve verdadero si la distancia es menor que el umbral, indicando que la vela está cerca de la EMA de 14
    distance < threshold

// Llama a la función y dibuja un marcador si la vela está cerca de la EMA de 14
if isNearEMA14() and showBarNearToEMA14
    label.new(x = bar_index, y = high, text = "Cerca de EMA de 14", style=label.style_label_down, color=color.yellow, size=size.normal, yloc = yloc.abovebar)
